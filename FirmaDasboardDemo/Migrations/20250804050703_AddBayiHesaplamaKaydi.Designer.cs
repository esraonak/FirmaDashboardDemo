// <auto-generated />
using System;
using FirmaDasboardDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirmaDasboardDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250804050703_AddBayiHesaplamaKaydi")]
    partial class AddBayiHesaplamaKaydi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirmaDasboardDemo.Models.Bayi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EtkOnaylandiMi")
                        .HasColumnType("bit");

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("KvkkOnaylandiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LisansSuresiBitis")
                        .HasColumnType("datetime2");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Bayiler");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.BayiFirma", b =>
                {
                    b.Property<int>("BayiId")
                        .HasColumnType("int");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.HasKey("BayiId", "FirmaId");

                    b.HasIndex("FirmaId");

                    b.ToTable("BayiFirmalari");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.BayiHesaplamaKaydi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BayiId")
                        .HasColumnType("int");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("GirilenHucrelerJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GorunenHucrelerJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatisFiyatlariJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BayiHesaplamaKayitlari");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.BayiMesaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("BayiCevabi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BayiCevapTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("BayiGoruntulediMi")
                        .HasColumnType("bit");

                    b.Property<int>("BayiId")
                        .HasColumnType("int");

                    b.Property<string>("FirmaCevabi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirmaCevapTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FirmaGoruntulediMi")
                        .HasColumnType("bit");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("GirilenHucrelerJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GorunenHucrelerJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MesajIcerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MesajTuru")
                        .HasColumnType("int");

                    b.Property<string>("SatisFiyatlariJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BayiId");

                    b.HasIndex("FirmaId");

                    b.HasIndex("UrunId");

                    b.ToTable("BayiMesajlar");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FacebookUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InstagramUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("LisansBitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("MaxBayiSayisi")
                        .HasColumnType("int");

                    b.Property<int>("MaxCalisanSayisi")
                        .HasColumnType("int");

                    b.Property<string>("SeoUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TwitterUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WebSitesi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Firmalar");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.FirmaCalisani", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EtkOnaylandiMi")
                        .HasColumnType("bit");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<bool>("KvkkOnaylandiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LisansSuresiBitis")
                        .HasColumnType("datetime2");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("RolId");

                    b.ToTable("FirmaCalisanlari");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.FirmaDegisken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Deger")
                        .HasColumnType("real");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FirmaDegiskenler");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.HataKaydi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaSeo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciRol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HataKayitlari");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.SuperAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("SuperAdminler");
                });

            modelBuilder.Entity("FormulTablosu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CalisanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalisanId");

                    b.HasIndex("UrunId");

                    b.ToTable("FormulTablosu");
                });

            modelBuilder.Entity("Hucre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Formul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GirdimiYapabilir")
                        .HasColumnType("bit");

                    b.Property<bool>("GozuksunMu")
                        .HasColumnType("bit");

                    b.Property<string>("HucreAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFormul")
                        .HasColumnType("bit");

                    b.Property<bool>("SatisFiyatMi")
                        .HasColumnType("bit");

                    b.Property<int>("TabloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TabloId");

                    b.ToTable("Hucre");
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.Bayi", b =>
                {
                    b.HasOne("Rol", "Rol")
                        .WithMany("Bayiler")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.BayiFirma", b =>
                {
                    b.HasOne("FirmaDasboardDemo.Models.Bayi", "Bayi")
                        .WithMany("BayiFirmalari")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirmaDasboardDemo.Models.Firma", "Firma")
                        .WithMany("BayiFirmalari")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bayi");

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.BayiMesaj", b =>
                {
                    b.HasOne("FirmaDasboardDemo.Models.Bayi", "Bayi")
                        .WithMany()
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FirmaDasboardDemo.Models.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId");

                    b.Navigation("Bayi");

                    b.Navigation("Firma");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.FirmaCalisani", b =>
                {
                    b.HasOne("FirmaDasboardDemo.Models.Firma", "Firma")
                        .WithMany("Calisanlar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rol", "Rol")
                        .WithMany("Calisanlar")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.SuperAdmin", b =>
                {
                    b.HasOne("Rol", null)
                        .WithMany("SuperAdminler")
                        .HasForeignKey("RolId");
                });

            modelBuilder.Entity("FormulTablosu", b =>
                {
                    b.HasOne("FirmaDasboardDemo.Models.FirmaCalisani", "Calisan")
                        .WithMany()
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Urun", "Urun")
                        .WithMany("FormulTablolari")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Calisan");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Hucre", b =>
                {
                    b.HasOne("FormulTablosu", "Tablo")
                        .WithMany("Hucreler")
                        .HasForeignKey("TabloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tablo");
                });

            modelBuilder.Entity("Urun", b =>
                {
                    b.HasOne("FirmaDasboardDemo.Models.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.Bayi", b =>
                {
                    b.Navigation("BayiFirmalari");
                });

            modelBuilder.Entity("FirmaDasboardDemo.Models.Firma", b =>
                {
                    b.Navigation("BayiFirmalari");

                    b.Navigation("Calisanlar");
                });

            modelBuilder.Entity("FormulTablosu", b =>
                {
                    b.Navigation("Hucreler");
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.Navigation("Bayiler");

                    b.Navigation("Calisanlar");

                    b.Navigation("SuperAdminler");
                });

            modelBuilder.Entity("Urun", b =>
                {
                    b.Navigation("FormulTablolari");
                });
#pragma warning restore 612, 618
        }
    }
}
